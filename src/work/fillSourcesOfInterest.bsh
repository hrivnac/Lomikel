import com.Lomikel.HBaser.HBaseClient;
import com.Lomikel.Januser.StringGremlinClient;
import com.Lomikel.Utils.SmallHttpClient;
import org.json.JSONArray;

StringGremlinClient clientG = new StringGremlinClient("134.158.74.85", 24445);
HBaseClient client = new HBaseClient("hbase-1.lal.in2p3.fr", 2183);
SmallHttpClient httpClient = new SmallHttpClient();

client.connect("ztf", "schema_2.2_2.0.0");
client.setLimit(50);

results = client.latests("i:objectId",
                         null,
                         10000,
                         true);
for (String oid : results) {
  answer = httpClient.postJSON("https://fink-portal.org/api/v1/objects", '{"objectId":"' + oid + '", "output-format":"json"}', null, null);
  ja = new JSONArray(answer);
  Map<String, Set<Double>> classes =  new TreeMap<>();
  for (o : ja) {
    cl = o.getString("v:classification");
    jd = o.getDouble("i:jd");
    if (!cl.equals("Unknown")) {
      if (classes.containsKey(cl)) {
        jds = classes.get(cl);
        jds.add(jd);
        }
      else {
        jds = new TreeSet<Double>();
        jds.add(jd);
        classes.put(cl, jds);
        }
      }
    }
  print(oid + ":");
  for (Map.Entry<String, Set<Double>> cls : classes.entrySet()) {
    key = cls.getKey();
    val = cls.getValue();
    weight = val.size();
    print("\t" + key + " in " + weight + " alerts");
    cmd = "new com.astrolabsoftware.FinkBrowser.Januser.FinkGremlinRecipies(g).registerSourcesOfInterest('" + key + "', '" + oid + "', " + weight + ", '" + cls.getValue() + "', 'hbase-1.lal.in2p3.fr:2183:ztf:schema_2.2_2.0.0')";
    clientG.interpret(cmd);
    }
  }
