// Specification of schema (constrains)
// ====================================

mgmt = graph.openManagement()

// Vertexes
datalink   = mgmt.makeVertexLabel('datalink'  ).make()

// Edges

// Properties
title         = mgmt.makePropertyKey('title'        ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
lbl           = mgmt.makePropertyKey('lbl'          ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
name          = mgmt.makePropertyKey('name'         ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
hbase         = mgmt.makePropertyKey('hbase'        ).dataType(Boolean.class).cardinality(Cardinality.SINGLE).make()
phoenix       = mgmt.makePropertyKey('phoenix'      ).dataType(Boolean.class).cardinality(Cardinality.SINGLE).make()
url           = mgmt.makePropertyKey('url'          ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
query         = mgmt.makePropertyKey('query'        ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
technology    = mgmt.makePropertyKey('technology'   ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
timestamp     = mgmt.makePropertyKey('timestamp'    ).dataType(String.class ).cardinality(Cardinality.SINGLE).make() // LocalDateTime
importDate    = mgmt.makePropertyKey('importDate'   ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()
importSource  = mgmt.makePropertyKey('importSource' ).dataType(String.class ).cardinality(Cardinality.SINGLE).make()

// Vertex properties
mgmt.addProperties(datalink,
                   lbl,
                   name,
                   technology,
                   url,
                   query)
                                    
// Edge properties

// Connections   

// Info
mgmt.printSchema()

mgmt.commit()
