// Create HBase Index
// (uses direct indexing, big data can use also MR indexing) 
// =========================================================

graph.tx().rollback()

mgmt = graph.openManagement()

// Properties
lbl  = mgmt.getPropertyKey('lbl')

// Indexes                                                          
mgmt.buildIndex('byLbl',  Vertex.class).addKey(lbl).buildCompositeIndex()
mgmt.buildIndex('byLblE', Edge.class  ).addKey(lbl).buildCompositeIndex()
                                                      
mgmt.commit()

// Wait for index                                           
ManagementSystem.awaitGraphIndexStatus(graph, 'byLbl' ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byLblE').status(SchemaStatus.REGISTERED).call()

// Reindex existing data
mgmt = graph.openManagement()
mgmt.updateIndex(mgmt.getGraphIndex('byLbl' ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex('byLblE'), SchemaAction.REINDEX).get()
mgmt.getGraphIndexes(Vertex.class)
mgmt.getGraphIndexes(Edge.class)
mgmt.printIndexes()
mgmt.commit()

// Enable index                                           
ManagementSystem.awaitGraphIndexStatus(graph, 'byLbl' ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byLblE').status(SchemaStatus.ENABLED).call()
