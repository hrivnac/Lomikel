// Specification of schema (constrains) - Fink
// ===========================================
// TBD: distance/difference between PCAs

mgmt = graph.openManagement()

// Vertexes
datalink          = mgmt.getVertexLabel('datalink')
AstroLabNet       = mgmt.makeVertexLabel('AstroLabNet'     ).make()
site              = mgmt.makeVertexLabel('site'            ).make()
AlertsOfInterest  = mgmt.makeVertexLabel('AlertsOfInterest').make()
alert             = mgmt.makeVertexLabel('alert'           ).make()
PCA               = mgmt.makeVertexLabel('PCA'             ).make()

// Edges
props    = mgmt.getEdgeLabel('props'   )
has      = mgmt.getEdgeLabel('has'     )
contains = mgmt.getEdgeLabel('contains')

// Properties
title         = mgmt.getPropertyKey('title'       )
lbl           = mgmt.getPropertyKey('lbl'         )
name          = mgmt.getPropertyKey('name'        )
hbase         = mgmt.getPropertyKey('hbase'       )
phoenix       = mgmt.getPropertyKey('phoenix'     )
url           = mgmt.getPropertyKey('url'         )
query         = mgmt.getPropertyKey('query'       )
technology    = mgmt.getPropertyKey('technology'  )
timestamp     = mgmt.getPropertyKey('timestamp'   )
importDate    = mgmt.getPropertyKey('importDate'  )
importSource  = mgmt.getPropertyKey('importSource')
objectId      = mgmt.makePropertyKey('objectId' ).dataType(String.class  ).cardinality(Cardinality.SINGLE).make()
jd            = mgmt.makePropertyKey('jd'       ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
alertType     = mgmt.makePropertyKey('alertType').dataType(String.class  ).cardinality(Cardinality.SINGLE).make()
pca00         = mgmt.makePropertyKey('pca00'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca01         = mgmt.makePropertyKey('pca01'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca02         = mgmt.makePropertyKey('pca02'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca03         = mgmt.makePropertyKey('pca03'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca04         = mgmt.makePropertyKey('pca04'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca05         = mgmt.makePropertyKey('pca05'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca06         = mgmt.makePropertyKey('pca06'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca07         = mgmt.makePropertyKey('pca07'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca08         = mgmt.makePropertyKey('pca08'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca09         = mgmt.makePropertyKey('pca09'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca10         = mgmt.makePropertyKey('pca10'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca11         = mgmt.makePropertyKey('pca11'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca12         = mgmt.makePropertyKey('pca12'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca13         = mgmt.makePropertyKey('pca13'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca14         = mgmt.makePropertyKey('pca14'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca15         = mgmt.makePropertyKey('pca15'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca16         = mgmt.makePropertyKey('pca16'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca17         = mgmt.makePropertyKey('pca17'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca18         = mgmt.makePropertyKey('pca18'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca19         = mgmt.makePropertyKey('pca19'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca20         = mgmt.makePropertyKey('pca20'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca21         = mgmt.makePropertyKey('pca21'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca22         = mgmt.makePropertyKey('pca22'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca23         = mgmt.makePropertyKey('pca23'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 
pca24         = mgmt.makePropertyKey('pca24'    ).dataType(Double.class  ).cardinality(Cardinality.SINGLE).make() 

// Vertex properties
mgmt.addProperties(site,
                   lbl,
                   title)   
mgmt.addProperties(AstroLabNet,
                   lbl,
                   title)
mgmt.addProperties(AlertsOfInterest,
                   lbl,
                   alertType,
                   technology,
                   url)   
mgmt.addProperties(alert,
                   lbl,
                   objectId,
                   jd)
mgmt.addProperties(PCA,
                   lbl,
                   objectId,
                   pca00,
                   pca01,
                   pca02,
                   pca03,
                   pca04,
                   pca05,
                   pca06,
                   pca07,
                   pca08,
                   pca09,
                   pca10,
                   pca11,
                   pca12,
                   pca13,
                   pca14,
                   pca15,
                   pca16,
                   pca17,
                   pca18,
                   pca19,
                   pca20,
                   pca21,
                   pca22,
                   pca23,
                   pca24)
                                    
// Edge properties
mgmt.addProperties(props,
                   lbl)
mgmt.addProperties(has,
                   lbl)
mgmt.addProperties(contains,
                   lbl)

// Connections   
mgmt.addConnection(has,      AstroLabNet,      site)
mgmt.addConnection(contains, AlertsOfInterest, alert)

// Info
mgmt.printSchema()

mgmt.commit()
