<project name="Lomikel"
         default="compile"
         basedir="../run">

  <description>
    Lomikel
    </description>

  <!-- Setup ================================================================-->

  <property environment="env"/>
  <property file="../ant/build-global.properties"/>
  <property file="../ant/build-local.properties"/>
  <property file="../ant/target-${target}.properties"/>
  <property name="site" value="${env.site}"/>
  
  <echo>Building for site ${target} on ${site}</echo>

  <path id="classpath.build">
    <pathelement path="${log4j_jar}"/>
    <pathelement path="${httpclient_jar}"/>
    <pathelement path="${httpcore_jar}"/>
    <pathelement path="${logging_jar}"/>
    <pathelement path="${cli_jar}"/>
    <pathelement path="${orgjson_jar}"/>
    <pathelement path="${slf4j_jar}"/>
    <pathelement path="${hbasecommon_jar}"/>
    <pathelement path="${hbaseclient_jar}"/>
    <pathelement path="${hadoopcommon_jar}"/>
    <pathelement path="${javaxmail_jar}"/>
    <pathelement path="${javaxservlet_jar}"/>
    <pathelement path="${bsh_jar}"/>
    <pathelement path="${cli_jar}"/>
    <fileset dir="${janusgraph_dir}/lib">
      <include name="*.jar"/>
      </fileset>
    <fileset dir="../extlib">
      <include name="*.jar"/>
      </fileset>
    </path>

  <path id="classpath.run">
    <fileset dir="../lib">
      <include name="*.jar"/>
      <exclude name="*.exe.jar"/>
      </fileset>
    <fileset dir="${hadoop_dir}">
      <include name="share/hadoop/client/*.jar"/>
      </fileset>
    <fileset dir="${hadoop_dir}">
      <include name="share/hadoop/common/*.jar"/>
      </fileset>
     <fileset dir="${hbase_dir}">
      <include name="lib/*.jar"/>
      </fileset>
    <path refid="classpath.build"/>
    </path>
    
  <path id="classpath_phoenix.run">
    <fileset dir="../lib">
      <include name="*.jar"/>
      <exclude name="*.exe.jar"/>
      </fileset>
    <pathelement path="${phoenix_jar}"/>
    <pathelement path="${groovy_sql_jar}"/>
    <path refid="classpath.build"/>
    </path>
    
  <path id="classpath.janusgraph">
    <fileset dir="${janusgraph_dir}/lib">
      <include name="*.jar"/>
      <exclude name="logback-classic-1.1.3.jar"/>
      </fileset>
    <fileset dir="../lib">
      <include name="*.jar"/>
      <exclude name="*.exe.jar"/>
      </fileset>
    <fileset dir="../extlib">
      <include name="*.jar"/>
      </fileset>
    <pathelement path="${bsh_jar}"/>
    </path>

  <property name="classpath.build.content"       refid="classpath.build"/>
  <property name="classpath.run.content"         refid="classpath.run"/>
  <property name="classpath_phoenix.run.content" refid="classpath_phoenix.run"/>

  <taskdef resource="edu/umd/cs/findbugs/anttask/tasks.properties"
           classpath="${spotbugs}/lib/spotbugs-ant.jar" />

  <!-- Info =================================================================-->
    
  <target name="info"
          depends="init"
          description="Create Info class">
    <!-- TBD: allow in clients !-->
    <mkdir dir="../build/com/Lomikel/Utils"/>
    <copy file="../src/java/com/Lomikel/Utils/Info.pre"
          tofile="../build/com/Lomikel/Utils/Info.java"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@version@"     value="${version}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@TSTAMP@"      value="${TSTAMP}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@user.name@"   value="${user.name}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@zookeeper@"   value="${zookeeper}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@hbase_table@" value="${hbase_table}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@TMP@"         value="${tmp_dir}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@MANAGER@"     value="${manager}"/>
    <replace file="../build/com/Lomikel/Utils/Info.java" token="@TARGET@"      value="${target}"/>
    </target>

  <!-- Init =================================================================-->

  <target name="init"
          description="Initialise environment">
    <tstamp>
      <format property="TSTAMP" pattern="dd/MMM/yyyy 'at' kk:mm:ss z"/>
      </tstamp>
    <mkdir dir="../build"/>
    <mkdir dir="../lib"/>
    <mkdir dir="../extlib"/>
    <mkdir dir="../extlib/import"/>
    <mkdir dir="../run"/>
    <mkdir dir="../dist"/>
    <mkdir dir="../doc/JavaDoc"/>
    <copy todir="../extlib/import">
			<fileset file="${log4j_jar}"/>
			<fileset file="${slf4j_jar}"/>
			<fileset file="${slf4jlog4j_jar}"/>
			<fileset file="${bsh_jar}"/>
			<fileset file="${scala_jar}"/>
			<fileset file="${httpclient_jar}"/>
			<fileset file="${httpcore_jar}"/>
			<fileset file="${logging_jar}"/>
			<fileset file="${cli_jar}"/>
			<fileset file="${orgjson_jar}"/>
			<fileset file="${javaxmail_jar}"/>
			<fileset file="${javaxservlet_jar}"/>
			<fileset file="${math3_jar}"/>
			<fileset file="${healpix_jar}"/>
      </copy>
    </target>

  <!-- Compile ==============================================================-->

  <target name="compile"
          depends="init,info"
          description="Compile sources">
    <echo message="Using Java version ${ant.java.version}(${java.version})."/>
    <javac destdir="../build"
           fork="yes"
           debug="yes"
           debuglevel="lines,vars,source"
           optimize="yes"
           source="8"
           target="8">
      <src path="../src/java"/>
      <src path="../build"/>
      <classpath>
        <path refid="classpath.build"/>
        </classpath>
      </javac>
    </target>
    
  <!-- Create JAR ===========================================================-->
  
  <target name="jar"
          depends="compile"
          description="Create JAR">
    <path id="libs">
      <fileset dir="../extlib">
        <include name="*.jar"/>
        <exclude name="*.exe.jar"/>
        </fileset>
      </path>
    <property name="classpath.libs" refid="libs"/>
    <jar jarfile="../lib/Lomikel-${version}.jar" index="yes">
      <fileset dir="../build"    includes="**/*.class"/>
      <fileset dir="../src/java" includes="com/Lomikel/**/*.properties"/>
      <fileset dir="../src/java" includes="com/Lomikel/**/*.bsh"/>
      <fileset dir="../src/java" includes="com/Lomikel/**/*.txt"/>
      <fileset dir="../src/java" includes="com/Lomikel/**/*.png"/>
      <fileset dir="../src/java" includes="com/Lomikel/**/*.gif"/>
      <fileset dir="../src/java" includes="com/Lomikel/**/*.css"/>
      <zipfileset includes="**/*" src="${log4j_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${slf4j_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${slf4jlog4j_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${logging_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${bsh_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${cli_jar}" excludes="META-INF/*"/>
      <service type="org.apache.tinkerpop.gremlin.jsr223.GremlinPlugin">
        <provider classname="com.Lomikel.GremlinPlugin.LomikelConnector"/>
        </service>
     <manifest>
        <attribute name="Created-By" value="${user.name}"/>
        <attribute name="AppName"    value="Lomikel"/>
        <attribute name="AppVersion" value="${version} ${TSTAMP}"/>
        </manifest>
      </jar>
    <jar jarfile="../lib/Lomikel.exe.jar" index="yes">
      <zipfileset includes="**/*" src="../lib/Lomikel-${version}.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${cli_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${logging_jar}" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/caffeine-2.3.1.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/commons-codec-1.14.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/commons-collections-3.2.2.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/commons-configuration-1.10.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/commons-lang-2.5.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/commons-lang3-3.3.1.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/commons-logging-1.1.1.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/exp4j-0.4.8.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/guava-18.0.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/gremlin-console-3.4.6.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/gremlin-core-3.4.6.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/gremlin-driver-3.4.6.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/gremlin-groovy-3.4.6.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/gremlin-shaded-3.4.6.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-2.5.7-indy.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-cli-picocli-2.5.7.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-console-2.5.7.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-groovysh-2.5.7-indy.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-json-2.5.7-indy.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-jsr223-2.5.7-indy.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-swing-2.5.7.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-templates-2.5.7.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/groovy-xml-2.5.7.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/hppc-0.7.1.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/httpclient-4.5.10.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/httpcore-4.4.12.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/ivy-2.3.0.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/janusgraph-driver-0.5.3.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/javapoet-1.8.0.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/javatuples-1.2.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/jbcrypt-0.4.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/jcabi-log-0.14.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/jcabi-manifests-1.1.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/jcl-over-slf4j-1.7.25.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/jline-2.14.6.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/jts-core-1.16.1.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/log4j-1.2.16.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/netty-all-4.1.45.Final.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/picocli-3.9.5.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/slf4j-api-1.7.12.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/slf4j-log4j12-1.7.12.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/snakeyaml-1.11.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/spatial4j-0.7.jar" excludes="META-INF/*"/>
      <zipfileset includes="**/*" src="${janusgraph_dir}/lib/tinkergraph-gremlin-3.4.6.jar" excludes="META-INF/*"/>
      <manifest>
        <attribute name="Created-By" value="${user.name}"/>
        <attribute name="AppName"    value="Lomikel"/>
        <attribute name="AppVersion" value="${version} ${TSTAMP}"/>
        <attribute name="Main-Class" value="com.Lomikel.Apps.LUC"/>
        </manifest>
      </jar>
    </target>
    
  <!-- WAR ==================================================================-->

  <target name="war"
          depends="jar"
          description="Create WAR">
 		<copy file="../src/ws/index.jsp"             tofile="../build/index.jsp"   overwrite="true"/>
 		<copy file="../src/ws/Top.jsp"               tofile="../build/Top.jsp"     overwrite="true"/>
 		<copy file="../src/ws/TopMini.jsp"           tofile="../build/TopMini.jsp" overwrite="true"/>
 		<copy file="../src/ws/Servers-${target}.jsp" tofile="../build/Servers.jsp" overwrite="true"/>
 		<copy file="../src/ws/Graphs-${target}.jsp"  tofile="../build/Graphs.jsp"  overwrite="true"/>
    <replace file="../build/index.jsp"   token="@NAME@"    value="${browsername}"/>
    <replace file="../build/index.jsp"   token="@ICON@"    value="${browsericon}"/>
    <replace file="../build/Top.jsp"     token="@VERSION@" value="${version}"/>
    <replace file="../build/Top.jsp"     token="@BUILD@"   value="${TSTAMP} by ${user.name} for ${target}"/>
    <replace file="../build/Top.jsp"     token="@NAME@"    value="${browsername}"/>
    <replace file="../build/Top.jsp"     token="@LOGO@"    value="${browserlogo}"/>
    <replace file="../build/Top.jsp"     token="@HOME@"    value="${browserurl}"/>
    <replace file="../build/Top.jsp"     token="@BOOT@"    value="${bootgremlin}"/>
    <replace file="../build/TopMini.jsp" token="@VERSION@" value="${version}"/>
    <replace file="../build/TopMini.jsp" token="@BUILD@"   value="${TSTAMP} by ${user.name} for ${target}"/>
    <replace file="../build/TopMini.jsp" token="@NAME@"    value="${browsername}"/>
    <replace file="../build/TopMini.jsp" token="@LOGO@"    value="${browserlogo}"/>
    <replace file="../build/TopMini.jsp" token="@HOME@"    value="${browserurl}"/>
    <replace file="../build/TopMini.jsp" token="@BOOT@"    value="${bootgremlin}"/>
    <war destfile="../lib/Lomikel.war" webxml="../src/ws/web.xml">
      <fileset dir="../src/ws">
	    	<include name="**/*"/>
        </fileset>
      <fileset dir="../extlib/ws">
	    	<include name="**/*"/>
	    	<exclude name="js9-3.0-src/**/*"/>
	    	<exclude name="vis-network-8.3.2-src/**/*"/>
	    	<exclude name="vis-timeline-7.3.9-src/**/*"/>
        <exclude name="Servers-*.jsp"/>
        <exclude name="Graphs-*.jsp"/>
        </fileset>
      <fileset dir="../build">
        <include name="index.jsp"/>
        <include name="Top.jsp"/>
        <include name="TopMini.jsp"/>
        <include name="Graphs.jsp"/>
        <include name="Servers.jsp"/>
        </fileset>
      <classes dir="../src/ws">
        <include name="log4j.properties"/>
        </classes>
      <lib file="../lib/Lomikel-${version}.jar"/>
      <lib file="${orgjson_jar}"/>
      <lib file="${javaxmail_jar}"/>
      <lib file="${javaxservlet_jar}"/>
      <lib file="${hbasecommon_jar}"/>
      <lib file="${hbaseclient_ja}"/>
      <lib file="${hadoopcommon_jar}"/>
      <lib file="${janusgraph_dir}/lib/caffeine-2.3.1.jar"/>
      <lib file="${janusgraph_dir}/lib/commons-codec-1.14.jar"/>
      <lib file="${janusgraph_dir}/lib/commons-collections-3.2.2.jar"/>
      <lib file="${janusgraph_dir}/lib/commons-configuration-1.10.jar"/>
      <lib file="${janusgraph_dir}/lib/commons-lang-2.5.jar"/>
      <lib file="${janusgraph_dir}/lib/commons-lang3-3.3.1.jar"/>
      <lib file="${janusgraph_dir}/lib/commons-logging-1.1.1.jar"/>
      <lib file="${janusgraph_dir}/lib/exp4j-0.4.8.jar"/>
      <lib file="${janusgraph_dir}/lib/guava-18.0.jar"/>
      <lib file="${janusgraph_dir}/lib/gremlin-console-3.4.6.jar"/>
      <lib file="${janusgraph_dir}/lib/gremlin-core-3.4.6.jar"/>
      <lib file="${janusgraph_dir}/lib/gremlin-driver-3.4.6.jar"/>
      <lib file="${janusgraph_dir}/lib/gremlin-groovy-3.4.6.jar"/>
      <lib file="${janusgraph_dir}/lib/gremlin-shaded-3.4.6.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-2.5.7-indy.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-cli-picocli-2.5.7.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-console-2.5.7.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-groovysh-2.5.7-indy.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-json-2.5.7-indy.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-jsr223-2.5.7-indy.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-swing-2.5.7.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-templates-2.5.7.jar"/>
      <lib file="${janusgraph_dir}/lib/groovy-xml-2.5.7.jar"/>
      <lib file="${janusgraph_dir}/lib/hppc-0.7.1.jar"/>
      <lib file="${janusgraph_dir}/lib/httpclient-4.5.10.jar"/>
      <lib file="${janusgraph_dir}/lib/httpcore-4.4.12.jar"/>
      <lib file="${janusgraph_dir}/lib/ivy-2.3.0.jar"/>
      <lib file="${janusgraph_dir}/lib/janusgraph-driver-0.5.3.jar"/>
      <lib file="${janusgraph_dir}/lib/javapoet-1.8.0.jar"/>
      <lib file="${janusgraph_dir}/lib/javatuples-1.2.jar"/>
      <lib file="${janusgraph_dir}/lib/jbcrypt-0.4.jar"/>
      <lib file="${janusgraph_dir}/lib/jcabi-log-0.14.jar"/>
      <lib file="${janusgraph_dir}/lib/jcabi-manifests-1.1.jar"/>
      <lib file="${janusgraph_dir}/lib/jcl-over-slf4j-1.7.25.jar"/>
      <lib file="${janusgraph_dir}/lib/jline-2.14.6.jar"/>
      <lib file="${janusgraph_dir}/lib/log4j-1.2.16.jar"/>
      <lib file="${janusgraph_dir}/lib/netty-all-4.1.45.Final.jar"/>
      <lib file="${janusgraph_dir}/lib/picocli-3.9.5.jar"/>
      <lib file="${janusgraph_dir}/lib/slf4j-api-1.7.12.jar"/>
      <lib file="${janusgraph_dir}/lib/slf4j-log4j12-1.7.12.jar"/>
      <lib file="${janusgraph_dir}/lib/snakeyaml-1.11.jar"/>
      <lib file="${janusgraph_dir}/lib/spatial4j-0.7.jar"/>
      <lib file="${janusgraph_dir}/lib/tinkergraph-gremlin-3.4.6.jar"/>
      <manifest>
        <attribute name="Created-By" value="${user.name}"/>
        <attribute name="AppName"    value="Lomikel"/>
        <attribute name="AppVersion" value="${version} ${TSTAMP}"/>
        </manifest>
      </war>
    </target>

  <!-- Deploy WS ============================================================-->
    
  <target name="deploy"
          depends="war"
          description="Deploy Development WS">
    <antcall target="deploy-pure"/>
    <antcall target="deploy-sudo"/>
    <antcall target="deploy-ssh"/>
    </target>
    
  <target name="deploy-sudo"
          if="${sudo}">
    <exec executable="/usr/bin/sudo">
      <arg line="chmod 777 ${server_dir}"/>
      </exec>
    <exec executable="/usr/bin/sudo">
      <arg line="/bin/rm -f ${server_dir}/${user.name}-Lomikel.war"/>
      </exec>
    <exec executable="/usr/bin/sudo">
      <arg line="/bin/rm -f ${server_dir}/${user.name}-LomikelHadoop.war"/>
      </exec>
    <exec executable="/usr/bin/sudo">
      <arg line="cp ../lib/Lomikel.war ${server_dir}/${user.name}-Lomikel.war"/>
      </exec>
    </target>
    
  <target name="deploy-ssh"
          if="${ssh}">
    <exec executable="/usr/bin/ssh">
      <arg line="root@${hostname} 'chmod 777 ${server_dir}'"/>
      </exec>
    <exec executable="/usr/bin/ssh">
      <arg line="root@${hostname} '/bin/rm -f ${server_dir}/${user.name}-Lomikel.war'"/>
      </exec>
    <copy file="../lib/Lomikel.war"
          tofile="${server_dir}/${user.name}-Lomikel.war"/>
    </target>
    
  <target name="deploy-pure"
           if="${cp}">
    <copy file="../lib/Lomikel.war"
          tofile="${server_dir}/${user.name}-Lomikel.war"/>
    </target>
  
  <target name="deploy-prod"
          depends="war"
          description="Deploy Production WS">
    <antcall target="deploy-prod-pure"/>
    <antcall target="deploy-prod-sudo"/>
    <antcall target="deploy-prod-ssh"/>
    </target>
    
  <target name="deploy-prod-sudo"
          if="${sudo}">
    <exec executable="/usr/bin/sudo">
      <arg line="chmod 777 ${server_dir}"/>
      </exec>
    <exec executable="/usr/bin/sudo">
      <arg line="/bin/rm -f ${server_dir}/Lomikel.war"/>
      </exec>
    <exec executable="/usr/bin/sudo">
      <arg line="/bin/rm -f ${server_dir}/LomikelHadoop.war"/>
      </exec>
    <exec executable="/usr/bin/sudo">
      <arg line="cp ../lib/Lomikel.war ${server_dir}/Lomikel.war"/>
      </exec>
    </target>
    
  <target name="deploy-prod-ssh"
          if="${ssh}">
    <exec executable="/usr/bin/ssh">
      <arg line="root@${hostname} 'chmod 777 ${server_dir}'"/>
      </exec>
    <exec executable="/usr/bin/ssh">
      <arg line="root@${hostname} '/bin/rm -f ${server_dir}/Lomikel.war'"/>
      </exec>
    <copy file="../lib/Lomikel.war"
          tofile="${server_dir}/Lomikel.war"/>
    </target>
    
  <target name="deploy-prod-pure"
          if="${cp}">
    <copy file="../lib/Lomikel.war"
          tofile="${server_dir}/Lomikel.war"/>
    </target>
 
  <!-- Patch and Restart JanuGraph ==========================================-->
  
  <target name="janus-restart"
          description="Patch and Restart JanuGraph">
    <antcall target="janus-stop"/>
    <antcall target="janus-patch"/>
    <antcall target="janus-start"/>
    </target>
 
  <!-- Patch JanusGraph =====================================================-->
  
  <target name="janus-patch"
          description="Patch JanusGraph">
    <echo>Patching JanusGraph Server</echo>
    <echo>... system</echo>
 		<copy todir="${janusgraph_dir}/scripts" overwrite="true">
			<fileset dir="../src/gremlin" includes="functions.gremlin"/>
			<fileset dir="../src/sys/janusgraph/scripts" includes="*"/>
      </copy>
 		<copy todir="${janusgraph_dir}/conf" overwrite="true">
			<fileset dir="../src/sys/janusgraph/conf" includes="*"/>
      </copy>
 		<copy todir="${janusgraph_dir}/conf/gremlin-server" overwrite="true">
			<fileset dir="../src/sys/janusgraph/conf/gremlin-server" includes="*"/>
      </copy>                                                                
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@STORAGE.HOSTNAME@"               value="${zookeeper}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@STORAGE.JANUS.TABLE@"            value="${janus_table}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@STORAGE.HBASE.TABLE@"            value="${hbase_table}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@STORAGE.HBASE.SCHEMA@"           value="${hbase_schema}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@STORAGE.PORT@"                   value="${hbase_port}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@ROWKEY.NAME@"                    value="${rowkey_name}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@ROWKEY.NAME@"                    value="${rowkey_name}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@BACKEND.PHOENIX.URL@"            value="${phoenix_url}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@BACKEND.PHOENIX.PROXY.HOSTNAME@" value="${backend_phoenix_proxy_hostname}"/>
    <replace file="${janusgraph_dir}/scripts/setup-lomikel.groovy"           token="@BACKEND.PHOENIX.PROXY.PORT@"     value="${backend_phoenix_proxy_port}"/>
    <replace file="${janusgraph_dir}/conf/Local.yaml"                        token="@SERVER.HOST@"                    value="${gremlin_host}"/>
    <replace file="${janusgraph_dir}/conf/Local.yaml"                        token="@SERVER.PORT@"                    value="${gremlin_port}"/>
    <replace file="${janusgraph_dir}/conf/LocalCORS.yaml"                    token="@SERVER.HOST@"                    value="${gremlin_host}"/>
    <replace file="${janusgraph_dir}/conf/LocalCORS.yaml"                    token="@SERVER.PORT.CORS@"               value="${gremlin_port_cors}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.yaml"         token="@SERVER.HOST@"                    value="${gremlin_host}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.yaml"         token="@SERVER.PORT@"                    value="${gremlin_port}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/LocalCORS.yaml"     token="@SERVER.HOST@"                    value="${gremlin_host}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/LocalCORS.yaml"     token="@SERVER.PORT.CORS@"               value="${gremlin_port_cors}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@STORAGE.HOSTNAME@"               value="${zookeeper}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@STORAGE.PORT@"                   value="${hbase_port}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@STORAGE.HBASE.TABLE@"            value="${janus_table}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.HBASE.TABLE@"            value="${hbase_table}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.HBASE.SCHEMA@"           value="${hbase_schema}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.HBASE.PORT@"             value="${hbase_port}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.ROWKEY.NAME@"            value="${rowkey_name}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.PHOENIX.URL@"            value="${phoenix_url}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.PHOENIX.PROXY.HOSTNAME@" value="${backend_phoenix_proxy_hostname}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@BACKEND.PHOENIX.PROXY.PORT@"     value="${backend_phoenix_proxy_port}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@EVENTS.TABLE@"                   value="${events_table}"/>
    <replace file="${janusgraph_dir}/conf/gremlin-server/Local.properties"   token="@EVENTS.SCHEMA@"                  value="${events_schema}"/>
    <copy file="${janusgraph_dir}/conf/gremlin-server/Local.properties" tofile="${janusgraph_dir}/conf/gremlin-server/Local-batch.properties" overwrite="true"/>
    <echo file="${janusgraph_dir}/conf/gremlin-server/Local-batch.properties" append="true">storage.batch-loading=true</echo>
    <echo>... plugin</echo>
    <mkdir dir="${janusgraph_dir}/ext/lomikel.connector"/>
    <delete includeEmptyDirs="true">
      <fileset dir="${janusgraph_dir}/ext/lomikel.connector" includes="Lomikel-*.jar"/>
      </delete>
 		<copy todir="${janusgraph_dir}/ext/lomikel.connector" overwrite="true">
			<fileset dir="../lib" includes="Lomikel-${version}.jar"/>
      </copy>
    <exec executable="../src/sh/updateJanusExt.sh">
      <arg line="${janusgraph_dir}/ext/plugins.txt"/>
      </exec>
    <touch file="${janusgraph_dir}/scripts/setup-finkbrowser.groovy"/>
    <touch file="${janusgraph_dir}/scripts/setup-atlascope.groovy"/>
    <chmod file="${janusgraph_dir}/scripts/setup-finkbrowser.groovy" perm="a+x"/>
    <chmod file="${janusgraph_dir}/scripts/setup-atlascope.groovy" perm="a+x"/>
    </target>
  
  <!-- Start/Stop JanusGraph ================================================-->
  
  <target name="janus-start"
          description="Start JanusGraph Server">
    <echo>Starting JanusGraph Server</echo>
    <exec executable="${janusgraph_dir}/bin/gremlin-server.sh">
      <env key="JANUSGRAPH_YAML" value="${janusgraph_dir}/conf/gremlin-server/Local.yaml"/>
      <env key="HBASE_CONF_DIR"  value="${phoenix_conf_dir}"/>
      <env key="CLASSPATH"       value="${classpath_phoenix.run.content}"/>
      <!--env key="CLASSPATH"       value="${groovy_sql_jar}:${hadoop_phoenix_conf}:${hbase_phoenix_conf}:${phoenix_old_jar}"/-->
      <!--env key="HBASE_CONF_DIR"  value="/opt/hadoop/conf/etc/analytix/hbase.analytix"/-->
      <!--env key="CLASSPATH"       value="/opt/hadoop/conf/etc/analytix/hadoop.analytix:/opt/hadoop/conf/etc/analytix/hbase.analytix"/-->
      <arg line="start"/>
      </exec>
    <echo>Starting JanusGraph Server (CORS)</echo>
    <exec executable="${janusgraph_dir}/bin/gremlin-server.sh">
      <env key="JANUSGRAPH_PID_FILE" value="${janusgraph_dir}/run/janusgraphCORS.pid"/>
      <env key="JANUSGRAPH_LOGDIR"   value="${janusgraph_dir}/logsCORS"/>
      <env key="JANUSGRAPH_YAML"     value="${janusgraph_dir}/conf/gremlin-server/LocalCORS.yaml"/>
      <env key="HBASE_CONF_DIR"      value="${phoenix_conf_dir}"/>
      <env key="CLASSPATH"       value="${classpath_phoenix.run.content}"/>
      <!--env key="CLASSPATH"           value="${groovy_sql_jar}:${hadoop_phoenix_conf}:${hbase_phoenix_conf}:${phoenix_old_jar}"/-->
      <!--env key="HBASE_CONF_DIR"      value="/opt/hadoop/conf/etc/analytix/hbase.analytix"/-->
      <!--env key="CLASSPATH"           value="/opt/hadoop/conf/etc/analytix/hadoop.analytix:/opt/hadoop/conf/etc/analytix/hbase.analytix"/-->
      <arg line="start"/>
      </exec>
    </target>
  
   <target name="janus-stop"
          description="Stop JanusGraph Server">
    <echo>Stopping JanusGraph Server</echo>
    <exec executable="${janusgraph_dir}/bin/gremlin-server.sh">
      <env key="JANUSGRAPH_YAML" value="${janusgraph_dir}/conf/gremlin-server/Local.yaml"/>
      <arg line="stop"/>
      </exec>
    <echo>Stopping JanusGraph Server (CORS)</echo>
    <exec executable="${janusgraph_dir}/bin/gremlin-server.sh">
      <env key="JANUSGRAPH_PID_FILE" value="${janusgraph_dir}/run/janusgraphCORS.pid"/>
      <env key="JANUSGRAPH_YAML"     value="${janusgraph_dir}/conf/gremlin-server/LocalCORS.yaml"/>
      <arg line="stop"/>
      </exec>
    </target>
    
   <target name="es-start"
          description="Start Elastic Search">
    <echo>Starting Elastic Search</echo>
    <exec executable="${janusgraph_dir}/elasticsearch/bin/elasticsearch">
      <arg line="-d -v"/>
      </exec>
    </target>
    
   <target name="es-stop"
          description="Stop Elastic Search">
    <echo>Stopping Elastic Search</echo>
    <exec executable="../src/sh/stopES.sh"/>
    </target>
    
    <target name="es-clean"
          description="Clean Elastic Search">
    <echo>Stopping Elastic Search</echo>
    <exec executable="../src/sh/cleanES.sh"/>
    </target>
   
  <!-- Init JanusGraph ======================================================-->
  
   <target name="janus-init"
          description="Initialize JanusGraph">
    <echo>Initializing JanusGraph Database</echo>
    <exec executable="../src/sh/initJanus.sh"/>
    </target>
    
  <!-- Extract Schema =======================================================-->

  <target name="extract-schema"
          description="Extract Gremlin Schema">
    <echo>Extracting Gremlin Schema</echo>
    <java classname="com.Lomikel.Januser.JanusClient"
          fork="true">
      <arg value="extract"/>
      <arg value="${zookeeper}"/>
      <arg value="${hbase_table}"/>
      <classpath>
        <path refid="classpath.janusgraph"/>
        </classpath>
      </java>
    </target>
    
  <!-- Clean ================================================================-->

  <target name="clean"
          depends="init"
          description="Clean up">
    <delete includeEmptyDirs="true">
      <fileset dir="../build" includes="**/*"/>
      </delete>
    <delete includeEmptyDirs="true">
      <fileset dir="../lib" includes="**/*"/>
      </delete>
    <delete includeEmptyDirs="true">
      <fileset dir="../doc" includes="**/*"/>
      </delete>
    <delete includeEmptyDirs="true">
      <fileset dir="../dist" includes="**/*"/>
      </delete>
    <!--delete includeEmptyDirs="true">
      <fileset dir="../extlib/import" includes="**/*"/>
      </delete-->
    <delete includeEmptyDirs="true">
      <fileset dir="." includes="**/*"/>
      </delete>
   </target>
 
  <!-- Dist =================================================================-->

  <target name="dist"
          depends="jar"
          description="Construct distribution">
    <copy todir="../dist">
			<fileset dir="../lib" includes="*.jar"/>
      </copy>
    <mkdir dir="../dist/jars-${version}"/>
    <copy todir="../dist/jars-${version}">
			<fileset file="${log4j_jar}"/>
			<fileset file="${slf4j_jar}"/>
			<fileset file="${slf4jlog4j_jar}"/>
			<fileset file="${bsh_jar}"/>
			<fileset file="${scala_jar}"/>
			<fileset file="${httpclient_jar}"/>
			<fileset file="${httpcore_jar}"/>
			<fileset file="${logging_jar}"/>
			<fileset file="${cli_jar}"/>
			<fileset file="${orgjson_jar}"/>
			<fileset file="${javaxmail_jar}"/>
			<fileset file="${javaxservlet_jar}"/>
			<fileset file="${math3_jar}"/>
			<fileset file="${healpix_jar}"/>
      </copy>
    <mkdir dir="../dist/ws-${version}"/>
    <copy todir="../dist/ws-${version}">
			<fileset dir="../src/ws">
			  <include name="*/**"/>
			  </fileset>
      </copy>
    <copy todir="../dist/ws-${version}">
			<fileset dir="../extlib/ws" includes="*/**" excludes="*-src/**"/>
      </copy>
    <mkdir dir="../dist/src-${version}/gremlin"/>
    <copy todir="../dist/src-${version}/gremlin">
			<fileset dir="../src/gremlin" includes="*/**"/>
      </copy>
  </target>

  <!-- Check ================================================================-->
    
   <target name="check-sockets"
          description="Check Sockets">
    <echo>Check Sockets</echo>
    <java classname="net.hep.atlas.Database.Atlascope.Sockets.SocketTest"
          fork="true">
      <classpath>
        <path refid="classpath.run"/>
        </classpath>
      </java>
    </target>
  
  <!-- JavaDoc ==============================================================-->

  <target name="doc"
          depends="jar,j2h,viz,uml"
          description="Construct documentation">
 		<copy todir="../doc">
			<fileset dir="../src" includes="*.html"/>
			<fileset dir="../src" includes="*.jpeg"/>
 			<fileset dir="../src" includes="*.jpg"/>
     </copy>
 		<copy todir="../doc/docsrc">
			<fileset dir="../docsrc" includes="*"/>
      </copy>
 		<copy todir="../doc/JavaDoc">
			<fileset dir="../src/java" includes="**/doc-files/*"/>
      </copy>
    <javadoc packagenames="*"
             doclet="org.jboss.apiviz.APIviz"
             docletpath="../extlib/apiviz-1.3.4.jar:../extlib/jdepend-2.9.5.jar:../extlib/tools-1.8.0.jar"
             sourcepath="../src/java:../build"
             destdir="../doc/JavaDoc"
             author="true"
             version="true"
             use="true"
             private="true"
             additionalparam=" -linksource -breakiterator -keywords -author -version"
             source="1.8"
             Overview="../src/java/com/Lomikel/overview.html"
             windowtitle="Lomikel">
      <doctitle><![CDATA[<u>]]>Lomikel<![CDATA[</u>]]></doctitle>
      <Header><![CDATA[<center>]]>Lomikel version: ${version}<![CDATA[</center>]]></Header>
      <Footer><![CDATA[<center>Written by: <a href='http://cern.ch/hrivnac'>J.Hrivnac</a></center>]]></Footer>
      <bottom><![CDATA[<a href='https://cern.ch/hrivnac/Activities/Packages/Lomikel'>Documentation</a>]]> built ${TODAY} on ${os.name} by ${user.name}</bottom>
      <group title="Apps"           packages="com.Lomikel.Apps"/>
      <group title="DB"             packages="com.Lomikel.DB"/>
      <group title="HBaser"         packages="com.Lomikel.HBaser"/>
      <group title="Januser"        packages="com.Lomikel.Januser"/>
      <group title="Phoenixer"      packages="com.Lomikel.Phoenixer"/>
      <group title="Graph"          packages="com.Lomikel.Graph"/>
      <group title="Utils"          packages="com.Lomikel.Utils*"/>
      <group title="Sockets"        packages="com.Lomikel.Sockets*"/>
      <group title="GremlinPlugin"  packages="com.Lomikel.GremlinPlugin*"/>
      <group title="GUI"            packages="com.Lomikel.GUI*"/>
      <group title="TinkerPopPatch" packages="com.Lomikel.TinerPopPatch*"/>
      <group title="WebService"     packages="com.Lomikel.WebService*"/>
      <group title="LehmanUtils"    packages="de.lehmannet.om.util*"/>
      <link href="http://docs.oracle.com/javase/8/docs/api" packagelistLoc="${javadoc}" offline="true"/>
      <link href="http://www.beanshell.org/javadoc/"/>
      <link href="https://logging.apache.org/log4j/1.2/apidocs"/>
      <link href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs"/>
      <link href="http://stleary.github.io/JSON-java"/>
      <link href="https://commons.apache.org/proper/commons-cli/apidocs"/>
      <link href="https://javadoc.io/doc/org.janusgraph/janusgraph-core/latest"/>
      <link href="https://tinkerpop.apache.org/javadocs/current/full"/>
      <link href="http://www.beanshell.org/javadoc"/>
      <link href="https://commons.apache.org/proper/commons-cli/apidocs"/>
      <classpath>
        <path refid="classpath.run"/>
        </classpath>
      </javadoc>
    <replace file="../doc/index.html" token="@VERSION@" value="${version}"/>
    <replace file="../doc/index.html" token="@BUILD@"   value="${TSTAMP} by ${user.name}"/>
  </target>

  <!-- Post =================================================================-->

  <target name="post"
          depends="init"
          description="Post documentation">
    <delete includeEmptyDirs="true">
      <fileset dir="${doc}" includes="**/*"/>
      </delete>
 		<copy todir="${doc}" force="true">
			<fileset dir="../doc" includes="**/*"/>
      </copy>
    </target>

  <!-- JDepend ==============================================================-->

  <target name="jdepend"
          depends="init"
          description="Analyse dependencies">
    <java classname="jdepend.swingui.JDepend"
          fork="true"
          failonerror="true">
      <arg value="../build"/>
      <classpath>
          <pathelement location="../extlib/jdepend-2.9.5.jar"/>
          </classpath>
      </java>
    </target>

  <!-- j2h ==================================================================-->

  <target name="j2h"
          depends="init"
          description="Construct source documentation">
    <taskdef name="java2html" classname="com.java2html.Java2HTMLTask">
      <classpath>
        <pathelement location="../extlib/j2h.jar"/>
        </classpath>
      </taskdef>
	  <java2html title="Lomikel" 
               simple="no"
             	  tabsize="4"
		            marginsize="2"
		            header="true"
		            footer="true"
		            destination="../doc/Src">
		  <fileset dir="../src"   includes="**/*.java"/>
		  <fileset dir="../build" includes="**/*.java"/>
		  <javadoc localRef="${javadoc}" httpRef="http://docs.oracle.com/javase/8/docs/api"/>
	    </java2html>
    </target>

  <!-- Viz ==================================================================-->

  <target name="viz"
          depends="init"
          description="Create flow of build file">
    <taskdef name="vizant" classname="net.sourceforge.vizant.Vizant"> 
      <classpath>
        <pathelement location="../extlib/vizant.jar"/>
        </classpath>
      </taskdef>
    <vizant antfile="../ant/build.xml" outfile="../doc/build.dot"/>
    </target>
    
  <!-- UmlGraph =============================================================-->  

  <target name="uml"
          depends="init"
          description="Create UML Graph">
    <pathconvert targetos="unix" property="classpath.run" refid="classpath.run"/>
	  <apply executable="javadoc" dest="../build" parallel="true">
		  <arg value="-classpath"/>
		  <arg value="${classpath.run}"/>
		  <arg value="-source"/>
		  <arg value="1.8"/>
		  <arg value="-docletpath"/>
		  <arg value="../extlib/UmlGraph.jar"/>
		  <arg line="-doclet org.umlgraph.doclet.UmlGraph"/>
		  <arg value="-all"/>
		  <arg value="-noguillemot"/>
		  <arg line="-output ../doc/index.dot"/>
		  <fileset dir="../src"/>
		  <fileset dir="../build/com"/>
		  <mapper type="glob" from="*.java" to="*.dot"/>
	    </apply>
	  <apply executable="dot" dest="../doc" parallel="false">
		  <arg value="-Tjpg"/>
		  <arg value="-o"/>
		  <targetfile/>
		  <srcfile/>
		  <fileset dir="../doc"/>
		  <mapper type="glob" from="*.dot" to="*.jpg"/>
      </apply>
    </target>

  <!-- Find Bugs ============================================================-->  

  <target name="findbugs"
          depends="jar"
          description="FindBugs Check">
    <property name="findbugs.home"
              value="${findbugs}"/>
    <taskdef name="findbugs"
             classpath="${findbugs.home}/lib/findbugs-ant.jar"
             classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <findbugs home="${findbugs.home}"
              output="text"
              outputFile="../run/FindBugs.out"
              excludeFilter="../ant/FindBugs-ExcludeFilter.xml">
      <auxClasspath>
        <path refid="classpath.run"/>
        </auxClasspath>
      <sourcePath path="../src" />
      <class location="../lib/Lomikel-${version}.jar" />
      </findbugs>   
    </target>
    
  <target name="spotbugs"
          depends="jar"
          description="SpotBugs Check">
    <spotbugs home="${spotbugs}"
              output="html"
              outputFile="Spotbugs.html" >
      <auxClasspath refid="classpath.build"/>
      <sourcePath path="../src/java" />
      <class location="../lib/Lomikel-${version}.jar" />
      </spotbugs>
    </target>

  <!-- Clean Imports ========================================================-->  

  <target name="cleanimports"
          description="Clean Unused Imports">
    <exec executable="../src/python/remove-unused-imports.py">
      <arg line="../src/java/com/Lomikel"/>
      </exec>
    </target>
 
  <!-- ======================================================================-->

  </project>
